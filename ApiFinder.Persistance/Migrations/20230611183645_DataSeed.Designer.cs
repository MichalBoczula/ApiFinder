// <auto-generated />
using System;
using ApiFinder.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiFinder.Persistance.Migrations
{
    [DbContext(typeof(ApiFinderContext))]
    [Migration("20230611183645_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiFinder.Domain.Dictionaries.ServerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ServerType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Test"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Production"
                        });
                });

            modelBuilder.Entity("ApiFinder.Domain.Dictionaries.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Online"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Offline"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Not defined"
                        });
                });

            modelBuilder.Entity("ApiFinder.Domain.Entities.ApiInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ServerType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ApiInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Address",
                            ServerType = 1,
                            Status = 3,
                            Url = "test"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Address",
                            ServerType = 2,
                            Status = 3,
                            Url = "prod"
                        });
                });

            modelBuilder.Entity("ApiFinder.Domain.Histories.ApiInformationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApiInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ServerTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApiInformationId");

                    b.HasIndex("Id");

                    b.HasIndex("ServerTypeId");

                    b.ToTable("ApiInformationHistoryList");
                });

            modelBuilder.Entity("ApiFinder.Domain.Histories.ApiInformationHistory", b =>
                {
                    b.HasOne("ApiFinder.Domain.Entities.ApiInformation", "ApiInformationRef")
                        .WithMany("ApiInformationHistoryList")
                        .HasForeignKey("ApiInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiInformationRef");
                });

            modelBuilder.Entity("ApiFinder.Domain.Entities.ApiInformation", b =>
                {
                    b.Navigation("ApiInformationHistoryList");
                });
#pragma warning restore 612, 618
        }
    }
}
